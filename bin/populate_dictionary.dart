#!/usr/bin/env dart

import 'dart:io';
import 'package:translation_engine/translation_engine.dart';

void main() async {
  print('üìù –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏');
  
  try {
    final engine = TranslationEngine();
    await engine.initialize();
    
    // –ü–æ–ª—É—á–∞–µ–º repository –Ω–∞–ø—Ä—è–º—É—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
  
    print('‚úÖ –î–≤–∏–∂–æ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã...');
    
    // –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, repository –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞–ø—Ä—è–º—É—é –∏–∑ TranslationEngine
    // –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –µ–≥–æ –æ—Ç–¥–µ–ª—å–Ω–æ
    print('‚ùå –ù–µ –º–æ–≥—É –ø–æ–ª—É—á–∏—Ç—å –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ repository –∏–∑ TranslationEngine');
    print('üí° –ü–æ–ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...');
    
    await engine.dispose();
    
  } catch (e, stackTrace) {
    print('‚ùå –û—à–∏–±–∫–∞: $e');
    print('Stack trace: $stackTrace');
    exit(1);
  }
}